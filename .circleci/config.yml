version: 2
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/openjdk:8-jdk-browsers
    steps:
      - checkout
      - run:
          name: Prepare APT permissions
          command: sudo |
            chmod -Rv go+rw /var/cache/apt
      - restore_cache:
          keys:
            - deps-v2-{{ checksum "build.gradle" }}
            - deps-v2
      - run:
          name: Run Tests
          command: ./gradlew jvmTest
      - store_test_results:
          path: build/test-results/test
      - restore_cache:
          keys:
            - apt-v1-
      - run:
          name: Install libncurses5
          # update cache ver when changing list here
          command: sudo apt-get install -y libncurses5
      - run:
          name: Cleanup cache
          command: |
            cd /var/cache/apt/archives/
            for pkg in `ls *.deb | cut -d _ -f 1 | sort -u`; do
              if [ $(ls $pkg\_* | wc -l) -gt 1 ]; then
                files=$(ls -vr $pkg\_*)
                rmfiles=`echo $files | cut -d " " -f 2-`
                sudo rm -v $rmfiles
              fi
            done
      - save_cache:
          key: apt-v1-{{ .Revision }}
          paths:
            - "/var/cache/apt"
      - run:
          name: Build
          command: ./gradlew linuxMainBinaries
      - persist_to_workspace:
          root: build
          paths:
            - bin
      - save_cache:
          paths:
            - ~/.gradle
            - ~/.konan
          key: deps-v2-{{ checksum "build.gradle" }}

  publish:
    docker:
    - image: cibuilds/github:0.12
    steps:
      - checkout
      - attach_workspace:
          at: ./artifacts/libs
      - run:
          name: "Prepare for publishing"
          command: |
            echo TODO
      - run:
          name: "Publish Release on GitHub"
          command: |
            VERSION=$(grep version <build.gradle | cut -c10- | rev | cut -c2- | rev)
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./artifacts/libs/bin/linux/releaseExecutable/*

workflows:
  version: 2
  everything:
    jobs:
      - build
      - publish:
          requires:
          - build
          filters:
            branches:
              only:
                - release
